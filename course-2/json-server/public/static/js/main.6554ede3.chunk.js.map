{"version":3,"sources":["components/HeaderComponent.js","shared/baseUrl.js","components/LoadingComponent.js","components/HomeComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/CommentForm.js","components/DishDetailComponent.js","components/FooterComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","className","dark","expand","onClick","href","src","height","width","alt","isOpen","navbar","to","outline","toggle","onSubmit","htmlFor","type","id","name","innerRef","input","check","Component","baseUrl","Loading","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","image","designation","description","Home","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderLeader","object","body","heading","About","leaders","map","active","title","list","RenderMenuItem","Menu","menu","dishes","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","color","CommentForm","console","log","JSON","stringify","addComment","dishId","rating","author","comment","defaultValue","selected","RenderDish","RenderComments","comments","commentsList","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","selectedDish","addCommentFunc","postComment","errorMessage","commentsErrMess","Footer","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENT","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","ADD_LEADERS","LEADERS_FAILED","LEADERS_LOADING","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","catch","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","location","key","withRouter","connect","actions","reset","newFeedback","Dishes","action","Comments","errMes","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAmIeA,E,kDA5HX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,WAAW,EACXC,aAAa,GAGjB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBAVJ,E,6CAanB,WACIG,KAAKC,SAAS,CACVP,WAAYM,KAAKP,MAAMC,c,yBAI/B,WACIM,KAAKC,SAAS,CACVN,aAAcK,KAAKP,MAAME,gB,yBAIjC,SAAYO,GACRF,KAAKF,cACLK,MAAM,aAAeH,KAAKI,SAASC,MAC7B,cAAgBL,KAAKM,SAASD,MAC9B,cAAgBL,KAAKO,SAASC,SAEpCN,EAAMO,mB,oBAGV,WAAU,IAAD,OACL,OAEI,aADA,CACA,qBACA,yBAAQC,UAAU,cAAlB,UACI,cAAC,IAAD,CAAQC,MAAI,EAACC,OAAO,KAApB,SACI,sBAAKF,UAAY,YAAjB,UACI,cAAC,IAAD,CAAeG,QAASb,KAAKJ,YAC7B,cAAC,IAAD,CAAac,UAAU,UAAUI,KAAK,IAAtC,SACI,qBAAKC,IAAI,yBAAyBC,OAAO,KAAKC,MAAM,KAC/CC,IAAI,4BAEb,eAAC,IAAD,CAAUC,OAAQnB,KAAKP,MAAMC,UAAW0B,QAAM,EAA9C,UACI,eAAC,IAAD,CAAKA,QAAM,EAAX,UACI,cAAC,IAAD,UACI,eAAC,IAAD,CAASV,UAAU,WAAWW,GAAG,QAAjC,UACI,sBAAMX,UAAU,qBADpB,aAIJ,cAAC,IAAD,UACI,eAAC,IAAD,CAASA,UAAU,WAAWW,GAAG,SAAjC,UACI,sBAAMX,UAAU,qBADpB,cAIJ,cAAC,IAAD,UACI,eAAC,IAAD,CAASA,UAAU,WAAWW,GAAG,QAAjC,UACI,sBAAMX,UAAU,qBADpB,aAIJ,cAAC,IAAD,UACI,eAAC,IAAD,CAASA,UAAU,WAAWW,GAAG,WAAjC,UACI,sBAAMX,UAAU,6BADpB,sBAKR,cAAC,IAAD,CAAQA,UAAU,UAAUY,SAAO,EAACT,QAASb,KAAKF,YAAlD,SACI,sBAAMY,UAAU,sBAAhB,8BAKhB,cAAC,IAAD,UACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,uDACA,gMAShB,eAAC,IAAD,CAAOS,OAAQnB,KAAKP,MAAME,YAAa4B,OAAQvB,KAAKF,YAApD,UACI,cAAC,IAAD,CAAayB,OAAQvB,KAAKF,YAA1B,mBACA,cAAC,IAAD,UACI,eAAC,IAAD,CAAM0B,SAAUxB,KAAKD,YAArB,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0B,QAAQ,WAAf,sBACA,cAAC,IAAD,CAAOC,KAAK,OAAOC,GAAG,WAAWC,KAAK,WAC/BC,SAAU,SAACC,GAAD,OAAW,EAAK1B,SAAW0B,QAEhD,eAAC,IAAD,WACI,cAAC,IAAD,CAAOL,QAAQ,WAAf,sBACA,cAAC,IAAD,CAAOC,KAAK,WAAWC,GAAG,WAAWC,KAAK,WACnCC,SAAU,SAACC,GAAD,OAAW,EAAKxB,SAAWwB,QAEhD,cAAC,IAAD,CAAWC,OAAK,EAAhB,SACI,eAAC,IAAD,CAAOA,OAAK,EAAZ,UACI,cAAC,IAAD,CAAOL,KAAK,WAAWE,KAAK,WACrBC,SAAU,SAACC,GAAD,OAAW,EAAKvB,SAAWuB,KAC5C,iDAGR,cAAC,IAAD,UACI,cAAC,IAAD,CAAQJ,KAAK,SAASrB,MAAM,SAASK,UAAU,aAA/C,sC,GAjHXsB,aCLRC,EAAU,yBCEVC,EAAU,WACnB,OACI,sBAAKxB,UAAU,SAAf,UACI,sBAAMA,UAAU,oDAChB,+C,QCAZ,SAASyB,EAAT,GAAiD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QAClC,OAAID,EAEI,cAAC,EAAD,IAGCC,EAED,6BAAKA,IAKL,cAAC,gBAAD,CAAeC,IAAE,EAACC,eAAgB,CAACC,cAAe,+BAAlD,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAS1B,IAAKkB,EAAUG,EAAKM,MAAOxB,IAAKkB,EAAKR,OAC9C,eAAC,IAAD,WACI,cAAC,IAAD,UAAYQ,EAAKR,OAChBQ,EAAKO,YAAc,cAAC,IAAD,UAAeP,EAAKO,cAA8B,KACtE,cAAC,IAAD,UAAWP,EAAKQ,sBAiCzBC,MAzBf,SAAcrD,GACV,OACI,sBAAMkB,UAAU,YAAhB,SAEI,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,cAACyB,EAAD,CAAYC,KAAM5C,EAAMsD,KACZT,UAAW7C,EAAMuD,cACjBT,QAAS9C,EAAMwD,kBAE/B,qBAAKtC,UAAU,oBAAf,SACI,cAACyB,EAAD,CAAYC,KAAM5C,EAAMyD,UACZZ,UAAW7C,EAAM0D,cACjBZ,QAAS9C,EAAM2D,kBAE/B,qBAAKzC,UAAU,oBAAf,SACI,cAACyB,EAAD,CAAYC,KAAM5C,EAAM4D,OACZf,UAAW7C,EAAM6D,eACjBf,QAAS9C,EAAM8D,yBC7C/C,SAASC,EAAT,GAAmC,IAAXH,EAAU,EAAVA,OACpB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO1C,UAAU,gCAAjB,SACI,cAAC,IAAD,CAAO8C,QAAM,EAACzC,IAAKkB,EAAUmB,EAAOV,MAAOxB,IAAKkC,EAAOxB,SAE3D,cAAC,IAAD,CAAO6B,MAAI,EAAX,SACI,cAAC,UAAD,CAASlB,IAAE,EAAX,SACI,eAAC,OAAD,CAAMA,IAAE,EAAR,UACI,cAAC,IAAD,CAAOmB,SAAO,EAAd,SACCN,EAAOxB,OAER,4BAAIwB,EAAOT,cACX,4BAAIS,EAAOR,wBAoFpBe,MA3Ef,SAAenE,GAEX,IAAMoE,EAAUpE,EAAMoE,QAAQC,KAAI,SAACT,GAC/B,OACI,qBAAqB1C,UAAU,OAA/B,SACI,cAAC6C,EAAD,CAAcH,OAAQA,KADhBA,EAAOzB,OAOzB,OACI,uBAAMjB,UAAU,YAAhB,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UAAgB,cAAC,IAAD,CAAMW,GAAG,QAAT,oBAChB,cAAC,IAAD,CAAgByC,QAAM,EAAtB,yBAEJ,0CACA,4BAGR,sBAAKpD,UAAU,kBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,6CACA,0aACA,gFAAkD,gDAAlD,qIAEJ,qBAAKA,UAAU,kBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAYA,UAAU,wBAAtB,+BACA,cAAC,IAAD,UACI,qBAAIA,UAAU,UAAd,UACI,oBAAIA,UAAU,QAAd,qBACA,oBAAIA,UAAU,QAAd,yBACA,oBAAIA,UAAU,QAAd,gCACA,oBAAIA,UAAU,QAAd,gCACA,oBAAIA,UAAU,QAAd,kCACA,oBAAIA,UAAU,QAAd,wBACA,oBAAIA,UAAU,QAAd,uBACA,oBAAIA,UAAU,QAAd,0BAKhB,qBAAKA,UAAU,SAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUA,UAAU,WAApB,SACI,6BAAYA,UAAU,aAAtB,UACI,mBAAGA,UAAU,OAAb,+FAEA,yBAAQA,UAAU,oBAAlB,wBACA,sBAAMqD,MAAM,eAAZ,6FAQpB,sBAAKrD,UAAU,kBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,wDAEJ,qBAAKA,UAAU,cAAf,SACI,cAAC,IAAD,CAAOsD,MAAI,EAAX,SACKJ,aCtFrB,SAASK,EAAT,GAAmC,IAATnB,EAAQ,EAARA,KACtB,OAEI,cADA,CACC,IAAD,CAAMzB,GAAE,gBAAWyB,EAAKnB,IAAxB,cACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAASV,MAAM,OAAOF,IAAKkB,EAAUa,EAAKJ,MAAOxB,IAAK4B,EAAKlB,OAC3D,cAAC,IAAD,UACI,cAAC,IAAD,UAAYkB,EAAKlB,eASrC,IAiDWsC,EAjDE,SAAC1E,GAEV,IAAM2E,EAAO3E,EAAM4E,OAAOP,KAAI,SAACf,GAC3B,OACI,qBAAmBpC,UAAU,sBAA7B,SAEI,cAACuD,EAAD,CAAgBnB,KAAMA,KAFhBA,EAAKnB,OAOvB,OAAGnC,EAAM6C,UAED,qBAAK3B,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,QAKPlB,EAAM8C,QAEP,qBAAK5B,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,6BAAKlB,EAAM8C,cAOnB,sBAAM5B,UAAU,YAAhB,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,SAAf,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UAAgB,cAAC,IAAD,CAAMW,GAAG,QAAT,oBAChB,cAAC,IAAD,CAAgByC,QAAM,EAAtB,qBAEJ,sCACA,0BAEHK,Q,OC7DnBE,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDC,EAAY,SAACD,GAAD,OAAS,SAACH,GAAD,OAAUA,GAASA,EAAIC,QAAUE,IACtDE,EAAW,SAACL,GAAD,OAAUM,MAAMC,OAAOP,KAClCQ,EAAa,SAACR,GAAD,MAAS,4CAA4CS,KAAKT,IAoL9DU,E,kDAhLX,WAAYxF,GAAQ,IAAD,8BACf,cAAMA,IAEDyF,aAAe,EAAKA,aAAapF,KAAlB,gBAHL,E,gDAMnB,SAAaqF,GAGTlF,KAAKR,MAAM2F,aAAaD,EAAOE,UACPF,EAAOG,SACPH,EAAOI,OACPJ,EAAOK,MACPL,EAAOM,MACPN,EAAOO,YACPP,EAAOQ,SAC/B1F,KAAKR,MAAMmG,sB,oBAGf,WAAU,IAAD,OAEL,OACI,uBAAMjF,UAAU,YAAhB,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UAAgB,cAAC,IAAD,CAAMW,GAAG,QAAT,oBAChB,cAAC,IAAD,CAAgByC,QAAM,EAAtB,2BAEJ,sDACA,4BAGR,sBAAKpD,UAAU,kBAAf,UACI,sBAAKA,UAAU,8BAAf,UACQ,6CACA,gEACyB,uBADzB,2BAEwB,uBAFxB,YAGS,uBACT,mBAAGA,UAAU,gBAJb,mBAI+C,uBAC/C,mBAAGA,UAAU,cALb,mBAK6C,uBAC7C,mBAAGA,UAAU,mBANb,KAMoC,mBAAGI,KAAK,4BAAR,sCAG5C,qBAAKJ,UAAU,8BAAf,SACI,uDAEJ,qBAAKA,UAAU,+BAAf,SACI,sBAAKA,UAAU,YAAYkF,KAAK,QAAhC,UACI,oBAAGA,KAAK,SAASlF,UAAU,kBAAkBI,KAAK,mBAAlD,UAAqE,mBAAGJ,UAAU,gBAAlF,WACA,oBAAGkF,KAAK,SAASlF,UAAU,eAAeI,KAAK,mBAA/C,UAAkE,mBAAIJ,UAAU,gBAAhF,YACA,oBAAGkF,KAAK,SAASlF,UAAU,kBAAkBI,KAAK,4BAAlD,UAA8E,mBAAGJ,UAAU,qBAA3F,oBAIZ,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,yDAEJ,qBAAKA,UAAU,kBAAf,SAEI,eAAC,OAAD,CAAMmF,MAAM,WAAWrE,SAAU,SAAC0D,GAAD,OAAY,EAAKD,aAAaC,IAA/D,UACI,eAAC,IAAD,CAAKxE,UAAU,aAAf,UACI,cAAC,IAAD,CAAOe,QAAQ,YAAYqE,GAAI,EAA/B,wBACA,eAAC,IAAD,CAAKA,GAAI,GAAT,UACI,cAAC,UAAQC,KAAT,CAAcF,MAAM,aAAalE,GAAG,YAAYC,KAAK,YACvCoE,YAAY,aAAatF,UAAU,eACnCuF,WAAY,CACR5B,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAEvC,cAAC,SAAD,CAAQ9D,UAAU,cAAcmF,MAAM,aAAaK,KAAK,UAChDC,SAAU,CACN9B,SAAU,aACVK,UAAW,oCACXF,UAAW,2CAI/B,eAAC,IAAD,CAAK9D,UAAU,aAAf,UACI,cAAC,IAAD,CAAOe,QAAQ,WAAWqE,GAAI,EAA9B,uBACA,eAAC,IAAD,CAAKA,GAAI,GAAT,UACI,cAAC,UAAQC,KAAT,CAAcF,MAAM,YAAYlE,GAAG,WAAWC,KAAK,WACrCoE,YAAY,YAAYtF,UAAU,eAClCuF,WAAY,CACV5B,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAErC,cAAC,SAAD,CAAQ9D,UAAU,cAAcmF,MAAM,YAAYK,KAAK,UAC/CC,SAAU,CACN9B,SAAU,aACVK,UAAW,oCACXF,UAAW,2CAI/B,eAAC,IAAD,CAAK9D,UAAU,aAAf,UACI,cAAC,IAAD,CAAOe,QAAQ,SAASqE,GAAI,EAA5B,kBACA,eAAC,IAAD,CAAKA,GAAI,GAAT,UACI,cAAC,UAAQC,KAAT,CAAcF,MAAM,UAAUlE,GAAG,SAASC,KAAK,SACjCoE,YAAY,cAActF,UAAU,eACpCuF,WAAY,CACV5B,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,IACrBG,cAEhB,cAAC,SAAD,CAAQjE,UAAU,cAAcmF,MAAM,UAAUK,KAAK,UAC7CC,SAAU,CACN9B,SAAU,aACVK,UAAW,kCACXF,UAAW,gCACXG,SAAU,6BAI9B,eAAC,IAAD,CAAKjE,UAAU,aAAf,UACI,cAAC,IAAD,CAAOe,QAAQ,QAAQqE,GAAI,EAA3B,mBACA,eAAC,IAAD,CAAKA,GAAI,GAAT,UACI,cAAC,UAAQC,KAAT,CAAcF,MAAM,SAASlE,GAAG,QAAQC,KAAK,QAC/BoE,YAAY,QAAQtF,UAAU,eAC9BuF,WAAY,CACV5B,WACAS,gBAEhB,cAAC,SAAD,CAAQpE,UAAU,cAAcmF,MAAM,SAASK,KAAK,UAC5CC,SAAU,CACN9B,SAAU,aACVS,WAAY,qCAIhC,eAAC,IAAD,CAAKpE,UAAU,aAAf,UACI,cAAC,IAAD,CAAKoF,GAAI,CAACM,KAAM,EAAGC,OAAQ,GAA3B,SACI,qBAAK3F,UAAU,aAAf,SACI,eAAC,IAAD,CAAOqB,OAAK,EAAZ,UACI,cAAC,UAAQuE,SAAT,CAAkBT,MAAM,SAASjE,KAAK,QACpBlB,UAAU,qBAC5B,gEAIZ,cAAC,IAAD,CAAKoF,GAAI,CAACM,KAAM,EAAGC,OAAQ,GAA3B,SACI,eAAC,UAAQE,OAAT,CAAgBV,MAAM,eAAejE,KAAK,cAC1BlB,UAAU,eAD1B,UAEI,0CACA,mDAIZ,eAAC,IAAD,CAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAOe,QAAQ,UAAUqE,GAAI,EAA7B,2BACA,cAAC,IAAD,CAAKA,GAAI,GAAT,SACI,cAAC,UAAQU,SAAT,CAAkBX,MAAM,WAAWlE,GAAG,UAAUC,KAAK,UACnC6E,KAAK,KAAK/F,UAAU,sBAG9C,cAAC,IAAD,CAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAKoF,GAAI,CAACM,KAAM,GAAIC,OAAQ,GAA5B,SACI,cAAC,IAAD,CAAQ3E,KAAK,SAASgF,MAAM,UAA5B,8C,GApKd1E,aCRhBqC,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IAiG9CkC,E,kDA5FX,WAAYnH,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTE,aAAa,GAGjB,EAAKG,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKoF,aAAe,EAAKA,aAAapF,KAAlB,gBARL,E,+CAWnB,WACIG,KAAKC,SAAS,CACVN,aAAcK,KAAKP,MAAME,gB,0BAIjC,SAAauF,GACT0B,QAAQC,IAAI,gBAAkBC,KAAKC,UAAU7B,IAC7ClF,KAAKR,MAAMwH,WAAWhH,KAAKR,MAAMyH,OAAQ/B,EAAOgC,OAAQhC,EAAOiC,OAAQjC,EAAOkC,SAC9EpH,KAAKF,gB,oBAIT,WAAU,IA5BK2E,EA4BN,OACL,OACI,gCACI,cAAC,IAAD,CAAQ5D,QAASb,KAAKF,YAAawB,SAAO,EAACZ,UAAU,OAArD,SACI,sBAAMA,UAAU,eAAhB,8BAEJ,eAAC,IAAD,CAAOS,OAAQnB,KAAKP,MAAME,YAAa4B,OAAQvB,KAAKF,YAApD,UACI,cAAC,IAAD,CAAayB,OAAQvB,KAAKF,YAA1B,yBAGA,cAAC,IAAD,UACI,eAAC,YAAD,CAAW0B,SAAU,SAAC0D,GAAD,OAAY,EAAKD,aAAaC,IAAnD,UACI,eAAC,IAAD,CAAKxE,UAAU,aAAf,UACI,cAAC,IAAD,CAAOe,QAAQ,SAASqE,GAAI,GAA5B,oBACA,cAAC,IAAD,UACI,eAAC,UAAQS,OAAT,CAAgBV,MAAM,UAAUlE,GAAG,SAASC,KAAK,SACjClB,UAAU,eAAe2G,aAAa,IADtD,UAEI,wBAAQhH,MAAM,IAAIiH,UAAQ,EAA1B,eACA,wBAAQjH,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,uBAIZ,eAAC,IAAD,CAAKK,UAAU,aAAf,UACI,cAAC,IAAD,CAAOe,QAAQ,SAASqE,GAAI,GAA5B,uBACA,eAAC,IAAD,WACI,cAAC,UAAQC,KAAT,CAAcF,MAAM,UAAUlE,GAAG,SAASC,KAAK,SACjCoE,YAAY,kBAAkBtF,UAAU,eACxCuF,WAAY,CACV5B,WACAK,WA5DjCD,EA4DsD,EA5D9C,SAACH,GAAD,OAAUA,GAASA,EAAIC,QAAUE,IA6DRD,UAAWA,EAAU,OAGrC,cAAC,SAAD,CAAQ9D,UAAU,cAAcmF,MAAM,UAAUK,KAAK,UAC7CC,SAAU,CACN9B,SAAU,aACVK,UAAW,oCACXF,UAAW,2CAK/B,eAAC,IAAD,CAAK9D,UAAU,aAAf,UACI,cAAC,IAAD,CAAOe,QAAQ,cAAcqE,GAAI,GAAjC,qBACA,cAAC,IAAD,UACI,cAAC,UAAQU,SAAT,CAAkBX,MAAM,WAAWlE,GAAG,cAAcC,KAAK,UACvC6E,KAAK,IAAI/F,UAAU,eACnBsF,YAAY,0BAGtC,cAAC,IAAD,CAAKtF,UAAU,aAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAQgB,KAAK,SAASgF,MAAM,UAA5B,4C,GAjFV1E,aCCtB,SAASuF,EAAT,GAA6B,IAARzE,EAAO,EAAPA,KACjB,OACI,qBAAKpC,UAAU,sBAAf,SACI,cAAC,gBAAD,CAAe6B,IAAE,EAACC,eAAgB,CAACC,cAAe,+BAAlD,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAASxB,MAAM,OAAOF,IAAKkB,EAAUa,EAAKJ,MAAOxB,IAAK4B,EAAKlB,OAC3D,eAAC,IAAD,WACI,cAAC,IAAD,UAAYkB,EAAKlB,OACjB,cAAC,IAAD,UAAWkB,EAAKF,wBAQxC,SAAS4E,EAAT,GAAyD,IAAhCC,EAA+B,EAA/BA,SAAUT,EAAqB,EAArBA,WAAYC,EAAS,EAATA,OAErCS,EAAeD,EAAS5D,KAAI,SAACuD,GAE/B,OAEI,aADA,CACA,gBACI,oBAAI1G,UAAU,gBAAd,SACI,cAAC,UAAD,CAAS6B,IAAE,EAAX,SACI,cAAC,OAAD,CAAMA,IAAE,EAAR,SACI,+BACI,4BAAI6E,EAAQA,UACZ,mCAAMA,EAAQD,OAAd,KAAwB,IAAIQ,KACHC,eACG,QACA,CAACC,KAAM,UAAWC,MAAO,QAASC,IAAK,YACtCC,OAAO,IAAIC,KAAKA,KAAKC,MAAMd,EAAQe,aAN3Df,EAAQzF,eAgBzC,OACI,sBAAKjB,UAAU,sBAAf,UACI,0CACCgH,EACD,cAAC,EAAD,CAAaT,OAAQA,EAAQD,WAAYA,OAKrD,IA0DWoB,EA1DQ,SAAC5I,GAEhB,IAAM6I,EAAe7I,EAAMsD,KACrB2E,EAAWjI,EAAMiI,SAEjBa,EAAiB9I,EAAM+I,YAEvBlG,EAAY7C,EAAM6C,UAClBmG,EAAehJ,EAAMwD,cACHxD,EAAMiJ,gBAE9B,OAAIpG,EAEI,qBAAK3B,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,QAKP8H,EAED,qBAAK9H,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,6BAAK8H,QAKI,MAAhBH,EAED,sBAAM3H,UAAU,YAAhB,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,SAAf,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UAAgB,cAAC,IAAD,CAAMW,GAAG,QAAT,oBAChB,cAAC,IAAD,UAAgB,cAAC,IAAD,CAAMA,GAAG,QAAT,oBAChB,cAAC,IAAD,CAAgByC,QAAM,EAAtB,SAAwBuE,EAAazG,UAEzC,6BAAKyG,EAAazG,OAClB,0BAEJ,cAAC2F,EAAD,CAAYzE,KAAMuF,IAClB,cAACb,EAAD,CAAgBC,SAAUA,EACVT,WAAYsB,EACZrB,OAAQzH,EAAMsD,KAAKnB,UAO3C,sBAAMjB,UAAU,eC9DjBgI,MA/Cf,SAAgBlJ,GACZ,OACI,wBAAQkB,UAAU,cAAlB,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,uCACA,qBAAIA,UAAU,gBAAd,UACI,6BAAI,cAAC,IAAD,CAAMW,GAAG,QAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,SAAT,qBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,QAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,WAAT,gCAGZ,sBAAKX,UAAU,iBAAf,UACI,6CACA,gEACyB,uBADzB,2BAEwB,uBAFxB,YAGS,uBACT,mBAAGA,UAAU,sBAJb,mBAIqD,uBACrD,mBAAGA,UAAU,oBALb,mBAKmD,uBACnD,mBAAGA,UAAU,yBANb,KAM0C,mBAAGI,KAAK,4BAAR,sCAI9C,qBAAKJ,UAAU,oCAAf,SACI,sBAAKA,UAAU,cAAf,UACI,mBAAGA,UAAU,iCAAiCI,KAAK,sBAAnD,SAAyE,mBAAGJ,UAAU,wBACtF,mBAAGA,UAAU,mCAAmCI,KAAK,0CAArD,SAA+F,mBAAGJ,UAAU,qBAC5G,mBAAGA,UAAU,mCAAmCI,KAAK,8BAArD,SAAmF,mBAAGJ,UAAU,qBAChG,mBAAGA,UAAU,kCAAkCI,KAAK,sBAApD,SAA0E,mBAAGJ,UAAU,oBACvF,mBAAGA,UAAU,iCAAiCI,KAAK,sBAAnD,SAAyE,mBAAGJ,UAAU,oBACtF,mBAAGA,UAAU,sBAAsBI,KAAK,UAAxC,SAAkD,mBAAGJ,UAAU,+BAI3E,qBAAKA,UAAU,6BAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,8F,eC1CXiI,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAa,aAEbC,EAAc,cACdC,EAAe,eACfC,EAAkB,kBAElBC,EAAiB,iBACjBC,EAAa,aACbC,EAAgB,gBAEhBC,EAAc,cACdC,EAAiB,iBACjBC,EAAkB,kBCKlBf,GAAc,SAACtB,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC,SAACmC,GAE7D,IAAMC,EAAa,CACfvC,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,QAASA,GAIb,OAFAoC,EAAWrB,MAAO,IAAIF,MAAOwB,cAEtBC,MAAMzH,EAAU,WAAY,CAC/B0H,OAAQ,OACRlG,KAAMqD,KAAKC,UAAUyC,GACrBI,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEZC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAEX,SAAAA,GAEC,MADc,IAAIC,MAAMD,EAAMvE,YAGjCoE,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIR,EArCA,SAACnC,GAAD,MAAc,CACpC1F,KAAM4I,EACNC,QAASnD,GAmCsBJ,CAAW+C,OACrCS,OAAM,SAAAP,GACHrD,QAAQC,IAAI,gBAAiBoD,EAAMvE,SACnCvF,MAAM,6CAA+C8J,EAAMvE,cAyF1D3C,GAAgB,iBAAO,CAChCrB,KAAM4I,IAGGG,GAAe,SAACC,GAAD,MAAc,CACtChJ,KAAM4I,EACNC,QAASG,IAGAC,GAAY,SAACvG,GAAD,MAAa,CAClC1C,KAAM4I,EACNC,QAASnG,IA0BAwG,GAAiB,SAACF,GAAD,MAAc,CACxChJ,KAAM4I,EACNC,QAASG,IAGAG,GAAc,SAACpD,GAAD,MAAe,CACtC/F,KAAM4I,EACNC,QAAS9C,IA2BAvE,GAAgB,iBAAO,CAChCxB,KAAM4I,IAGGQ,GAAe,SAACJ,GAAD,MAAc,CACtChJ,KAAM4I,EACNC,QAASG,IAGAK,GAAY,SAACC,GAAD,MAAa,CAClCtJ,KAAM4I,EACNC,QAASS,IA2BA3H,GAAiB,iBAAO,CACjC3B,KAAM4I,IAGGW,GAAgB,SAACP,GAAD,MAAc,CACvChJ,KAAM4I,EACNC,QAASG,IAGAQ,GAAa,SAACtH,GAAD,MAAc,CACpClC,KAAM4I,EACNC,QAAS3G,I,SC9NPuH,G,uKAoBF,WACInL,KAAKR,MAAM4L,cACXpL,KAAKR,MAAM6L,gBACXrL,KAAKR,MAAM8L,cACXtL,KAAKR,MAAM+L,iB,oBAGf,WAAU,IAAD,OAwEL,OACI,sBAAK7K,UAAU,MAAf,UAMI,cAAC,EAAD,IACA,cAAC,mBAAD,UACI,cAAC,iBAAD,CAA6C8K,WAAW,OAAOC,QAAS,IAAxE,SAQQ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,QAAQC,UAxF3B,WACb,OAKI,aAJA,CAIC,EAAD,CAAM7I,KAAM,EAAKtD,MAAM4E,OAAOA,OAAOwH,QAAO,SAAC9I,GAAD,OAAUA,EAAK+I,YAAU,GAC/D9I,cAAe,EAAKvD,MAAM4E,OAAO/B,UACjCW,cAAe,EAAKxD,MAAM4E,OAAO9B,QACjCW,UAAW,EAAKzD,MAAMsM,WAAWA,WAAWF,QAAO,SAACG,GAAD,OAAWA,EAAMF,YAAU,GAC9E3I,cAAe,EAAK1D,MAAMsM,WAAWzJ,UACrCc,cAAe,EAAK3D,MAAMsM,WAAWxJ,QACrCc,OAAQ,EAAK5D,MAAMoE,QAAQA,QAAQgI,QAAO,SAACxI,GAAD,OAAYA,EAAOyI,YAAU,GACvExI,eAAgB,EAAK7D,MAAMoE,QAAQvB,UACnCiB,eAAgB,EAAK9D,MAAMoE,QAAQtB,aA2EzB,cAAC,IAAD,CAAO0J,OAAK,EAACN,KAAK,WAAWC,UAvEjC,WAChB,OACI,cAAC,EAAD,CAAShG,kBAAmB,EAAKnG,MAAMmG,kBAC9BR,aAAc,EAAK3F,MAAM2F,kBAsElB,cAAC,IAAD,CAAO6G,OAAK,EAACN,KAAK,SAASC,UAlEjC,WACd,OAEI,aADA,CACC,EAAD,CAAO/H,QAAS,EAAKpE,MAAMoE,QAAQA,QAC5BvB,UAAW,EAAK7C,MAAMoE,QAAQvB,UAC9BC,QAAS,EAAK9C,MAAMoE,QAAQtB,aA8DnB,cAAC,IAAD,CAAO0J,OAAK,EAACN,KAAK,QAAQC,UA1DjC,WACb,OAGI,aAFA,CAEC,EAAD,CAAMvH,OAAQ,EAAK5E,MAAM4E,OAAOA,OAC1B/B,UAAW,EAAK7C,MAAM4E,OAAO/B,UAC7BC,QAAS,EAAK9C,MAAM4E,OAAO9B,aAqDjB,cAAC,IAAD,CAAOoJ,KAAK,gBAAgBC,UAjDjC,SAAC,GAAa,IAAZM,EAAW,EAAXA,MACjB,OAQI,aAPA,CAOC,EAAD,CAAYnJ,KACI,EAAKtD,MAAM4E,OAAOA,OACjBwH,QAAO,SAAC9I,GAAD,OACRA,EAAKnB,KAAOuK,SAASD,EAAME,OAAOlF,OAAQ,OAAK,GACnD5E,UAAW,EAAK7C,MAAM4E,OAAO/B,UAC7BW,cAAe,EAAKxD,MAAM4E,OAAO9B,QACjCmF,SACI,EAAKjI,MAAMiI,SAASA,SACnBmE,QAAO,SAACxE,GAAD,OACRA,EAAQH,SAAWiF,SAASD,EAAME,OAAOlF,OAAQ,OACrDwB,gBAAiB,EAAKjJ,MAAMiI,SAASnF,QAErCiG,YAAa,EAAK/I,MAAM+I,iBA8BpB,cAAC,IAAD,CAAUlH,GAAG,cAhBLrB,KAAKR,MAAM4M,SAASC,OAqB5C,cAAC,EAAD,W,GAjIGrK,aAuIJsK,eAAWC,mBA7JF,SAAC9M,GAAD,MAAY,CAE5B2E,OAAQ3E,EAAM2E,OACdqD,SAAUhI,EAAMgI,SAChBqE,WAAYrM,EAAMqM,WAClBlI,QAASnE,EAAMmE,YAII,SAAC2F,GAAD,MAAe,CAEtC6B,YAAa,WAAO7B,GD2FS,SAACA,GAG9B,OAFAA,EAASxG,IAAc,IAEhB2G,MAAMzH,EAAU,UACd6H,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAEX,SAAAA,GAEC,MADc,IAAIC,MAAMD,EAAMvE,YAGjCoE,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA1F,GAAM,OAAImF,EAASoB,GAAUvG,OAClCoG,OAAM,SAAAP,GAAK,OAAIV,EAASkB,GAAaR,EAAMvE,iBC7GpD2F,cAAe,WAAO9B,GDgIS,SAACA,GAEhC,OAAOG,MAAMzH,EAAU,YACd6H,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,MAAQJ,EAASK,YAEpE,MADAH,EAAMF,SAAWA,EACXE,KAEX,SAAAA,GAEC,MADc,IAAIC,MAAOD,EAAMvE,YAGlCoE,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAArC,GAAQ,OAAI8B,EAASsB,GAAYpD,OACtC+C,OAAM,SAAAP,GAAK,OAAIV,EAASqB,GAAeX,EAAMvE,iBCjJtD4F,YAAa,WAAO/B,GDgKS,SAACA,GAG9B,OAFAA,EAASrG,IAAc,IAEhBwG,MAAMzH,EAAU,cACd6H,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,MAAQJ,EAASK,YAEpE,MADAH,EAAMF,SAAWA,EACXE,KAEX,SAAAA,GAEC,MADc,IAAIC,MAAOD,EAAMvE,YAGlCoE,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAkB,GAAM,OAAIzB,EAASwB,GAAUC,OAClCR,OAAM,SAAAP,GAAK,OAAIV,EAASuB,GAAab,EAAMvE,iBClLpD6F,aAAc,WAAOhC,GDqMS,SAACA,GAG/B,OAFAA,EAASlG,IAAe,IAEjBqG,MAAMzH,EAAU,WACd6H,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,MAAQJ,EAASK,YAEpE,MADAH,EAAMF,SAAWA,EACXE,KAEX,SAAAA,GAEC,MADc,IAAIC,MAAOD,EAAMvE,YAGlCoE,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAlG,GAAO,OAAI2F,EAAS2B,GAAWtH,OACpC4G,OAAM,SAAAP,GAAK,OAAIV,EAAS0B,GAAchB,EAAMvE,iBCvNrDC,kBAAmB,WAAO4D,EAASiD,UAAQC,MAAM,cACjDlE,YAAa,SAACtB,EAAQC,EAAQC,EAAQC,GAAzB,OACAmC,EAAShB,GAAYtB,EAAQC,EAAQC,EAAQC,KAC1DjC,aAAc,SAACC,EAAWC,EAAUC,EAAQC,EAAOC,EAAOC,EAAaC,GAAzD,OACD6D,EDoBW,SAACnE,EAAWC,EAAUC,EAAQC,EAAOC,EAAOC,EAAaC,GAAzD,OACxB,SAAC6D,GAED,IAAMmD,EAAc,CAChBtH,UAAWA,EACXC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPC,MAAOA,EACPC,YAAaA,EACbC,QAASA,GAIb,OAFAgH,EAAYvE,MAAO,IAAIF,MAAOwB,cAEvBC,MAAMzH,EAAU,WAAY,CAC/B0H,OAAQ,OACRlG,KAAMqD,KAAKC,UAAU2F,GACrB9C,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEZC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAEX,SAAAA,GAEC,MADc,IAAIC,MAAMD,EAAMvE,YAGjCoE,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GACFnD,QAAQC,IAAI,kCAAmCkD,GAC/C5J,MAAM,iCAAmC2G,KAAKC,UAAUgD,OAE3DS,OAAM,SAAAP,GACHrD,QAAQC,IAAI,gBAAiBoD,EAAMvE,SACnCvF,MAAM,6CAA+C8J,EAAMvE,aC9D7CP,CAAaC,EAAWC,EAAUC,EAAQC,EAAOC,EAAOC,EAAaC,QA0IrE6G,CAA6CpB,K,iBC5K1DwB,GAAS,WAAmE,IAAlElN,EAAiE,uDAAzD,CAAC4C,WAAW,EAAMC,QAAS,KAAM8B,OAAQ,IAAKwI,EAAW,uCACpF,OAAOA,EAAOlL,MAEV,KAAK4I,EACD,OAAO,6BAAI7K,GAAX,IAAkB4C,WAAW,EAAOC,QAAS,KAAM8B,OAAQwI,EAAOrC,UAEtE,KAAKD,EACD,OAAO,6BAAI7K,GAAX,IAAkB4C,WAAW,EAAMC,QAAS,KAAM8B,OAAQ,KAE9D,KAAKkG,EACD,OAAO,6BAAI7K,GAAX,IAAkB4C,WAAW,EAAOC,QAASsK,EAAOrC,UAExD,QACI,OAAO9K,ICZNoN,GAAW,WAAqD,IAApDpN,EAAmD,uDAA3C,CAAEqN,OAAQ,KAAMrF,SAAU,IAAMmF,EAAW,uCACxE,OAAOA,EAAOlL,MAEV,KAAK4I,EACD,OAAO,6BAAI7K,GAAX,IAAkB6C,QAAS,KAAMmF,SAAUmF,EAAOrC,UAEtD,KAAKD,EACD,OAAO,6BAAI7K,GAAX,IAAkB6C,QAASsK,EAAOrC,QAAS9C,SAAU,KAYzD,KAAK6C,EACD,IAAIlD,EAAUwF,EAAOrC,QACrB,OAAO,6BAAI9K,GAAX,IAAkBgI,SAAUhI,EAAMgI,SAASsF,OAAO3F,KAEtD,QACI,OAAO3H,ICnBNuN,GAAa,WAAuE,IAAtEvN,EAAqE,uDAA7D,CAAC4C,WAAW,EAAMC,QAAS,KAAMwJ,WAAY,IAAKc,EAAW,uCAC5F,OAAOA,EAAOlL,MAEV,KAAK4I,EACD,OAAO,6BAAI7K,GAAX,IAAkB4C,WAAW,EAAOC,QAAS,KAAMwJ,WAAYc,EAAOrC,UAE1E,KAAKD,EACD,OAAO,6BAAI7K,GAAX,IAAkB4C,WAAW,EAAMC,QAAS,KAAMwJ,WAAY,KAElE,KAAKxB,EACD,OAAO,6BAAI7K,GAAX,IAAkB4C,WAAW,EAAOC,QAASsK,EAAOrC,UAExD,QACI,OAAO9K,ICpBNwN,GAAU,WAAsE,IAArExN,EAAoE,uDAA5D,CAAE4C,WAAW,EAAMC,QAAS,KAAMsB,QAAS,IAAMgJ,EAAW,uCACxF,OAAOA,EAAOlL,MAEV,KAAK4I,EACD,OAAO,6BAAI7K,GAAX,IAAkB4C,WAAW,EAAOC,QAAS,KAAMsB,QAASgJ,EAAOrC,UAEvE,KAAKD,EACD,OAAO,6BAAI7K,GAAX,IAAkB4C,WAAW,EAAMC,QAAS,KAAMsB,QAAS,KAE/D,KAAK0G,EACD,OAAO,6BAAI7K,GAAX,IAAkB4C,WAAW,EAAOC,QAASsK,EAAOrC,UAExD,QACI,OAAO9K,I,wCChBNyN,GAAkB,CAC3B9H,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACbC,QAAS,ICKPyH,GCQYC,uBACVC,2BAAgB,cACZjJ,OAAQuI,GACRlF,SAAUoF,GACVf,WAAYkB,GACZpJ,QAASqJ,IACNK,sBAAY,CACXC,SAAUL,OAGlBM,2BAAgBC,KAAOC,ODhBzBC,G,4JAWJ,WAEE,OACE,cAAC,WAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,IAAD,UAQI,cAAC,GAAD,Y,GAvBMnL,aA+BH2L,MEjCAC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhE,MAAK,YAAkD,IAA/CiE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCIdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6554ede3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Modal, ModalHeader,\r\n         ModalBody, Button, FormGroup, Label, Input, Form } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this); // binding function to 'this' for using in JSX w/o arrow syntax\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \r\n              \" Password: \" + this.password.value + \r\n              \" Remember: \" + this.remember.checked);\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            /* <> - short syntax for React fragment opposite <React.Fragment> */\r\n            <>\r\n            <header className=\"main-header\">\r\n                <Navbar dark expand=\"md\">\r\n                    <div className = \"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                                 alt=\"Ristorante Con Fusion\"/>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/about\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contact\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Button className=\"ml-auto\" outline onClick={this.toggleModal}>\r\n                                <span className=\"fa fa-sign-in fa-lg\"> Login</span>\r\n                            </Button>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>\r\n                                    We take inspiration from the World's best cuisines, and create \r\n                                    a unique fusion experience. Our lipsmacking creations will tickle \r\n                                    your culinary senses!\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                       innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                       innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                           innerRef={(input) => this.remember = input} />\r\n                                    <p>Remember Me</p>\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Button type=\"submit\" value=\"submit\" className=\"bg-primary\">\r\n                                    Login\r\n                                </Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </header>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading...</p>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport { Card, CardBody, CardImg, CardText, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <FadeTransform in transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <main className=\"container\">\r\n            {/* <h4>Home</h4> */}\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                                isLoading={props.dishesLoading} \r\n                                errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                                isLoading={props.promosLoading} \r\n                                errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                                isLoading={props.leadersLoading} \r\n                                errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Form, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Stagger, Fade } from 'react-animation-components';\r\n\r\nfunction RenderLeader( {leader} ) {\r\n    return(\r\n        <Media>\r\n            <Media className=\"img-fluid align-self-top mr-4\">\r\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Media body>\r\n                <Stagger in>\r\n                    <Fade in>\r\n                        <Media heading>\r\n                        {leader.name}\r\n                        </Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Fade>\r\n                </Stagger>\r\n\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <div key={leader.id} className=\"mt-2\">\r\n                <RenderLeader leader={leader} />\r\n            </div>\r\n            // <p>Leader {leader.name}</p>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <main className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12 mt-3\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default About; ","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl'; // connect to a server\r\n\r\n// function RenderMenuItem(props) --props as a parameter using when we don't know what we want to recieve\r\n\r\n    // function RenderMenuItem({ dish, onClick }) {\r\n    function RenderMenuItem({ dish }) {\r\n        return(\r\n            // <Card onClick={() => onClick(dish.id)}> --no longer avaliable since onClick not passed by MainComponent\r\n            <Link to={`/menu/${dish.id}`} > {/* --only `` backward quotes allows (~ w/o shift)*/}\r\n                <Card>\r\n                    {/* <CardImg width=\"100%\" src={dish.image} alt={dish.name} /> --fetch image directly from a server that accept any changes in images*/}\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Card>\r\n            </Link>\r\n\r\n        );\r\n    }\r\n\r\n    /* Another way to implementing functional component */\r\n    const Menu = (props) => {\r\n        \r\n        const menu = props.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    {/* <RenderMenuItem dish={dish} onClick={props.onClick} /> */}\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if(props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <main className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                        {menu}\r\n                    </div>\r\n                </main>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Label, Col, Row, Button } from 'reactstrap';\r\n// import { Control, LocalForm, Errors } from 'react-redux-form'; --Local Form no longer used since using form reducer\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        // console.log(\"Current state is: \" + JSON.stringify(values));\r\n        // alert(\"Current state is: \" + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, \r\n                                values.lastname, \r\n                                values.telnum, \r\n                                values.email, \r\n                                values.agree,\r\n                                values.contactType,\r\n                                values.message)\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <main className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h3>Location Information</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"tel:+85212345678\"><i  className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* <LocalForm onSubmit={(values) => this.handleSubmit(values)}> */}\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                                  placeholder=\"First Name\" className=\"form-control\"\r\n                                                  validators={{\r\n                                                      required,\r\n                                                      minLength: minLength(3),\r\n                                                      maxLength: maxLength(15)\r\n                                                  }} />\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required! ',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be less than 15 characters'\r\n                                            }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                                  placeholder=\"Last Name\" className=\"form-control\"\r\n                                                  validators={{\r\n                                                    required,\r\n                                                    minLength: minLength(3),\r\n                                                    maxLength: maxLength(15)\r\n                                                }} />\r\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required! ',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be less than 15 characters'\r\n                                            }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                                  placeholder=\"Tel. Number\" className=\"form-control\"\r\n                                                  validators={{\r\n                                                    required,\r\n                                                    minLength: minLength(3),\r\n                                                    maxLength: maxLength(15),\r\n                                                    isNumber\r\n                                                }} />\r\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required! ',\r\n                                                minLength: 'Must be greater than 2 numbers ',\r\n                                                maxLength: 'Must be less than 15 numbers ',\r\n                                                isNumber: 'Must be a number '\r\n                                            }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" \r\n                                                  placeholder=\"Email\" className=\"form-control\"\r\n                                                  validators={{\r\n                                                    required,\r\n                                                    validEmail\r\n                                                }} />\r\n                                    <Errors className=\"text-danger\" model=\".email\" show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required! ',\r\n                                                validEmail: 'Invalid. Should contain @'\r\n                                            }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                              className=\"form-check-input\" /> \r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                                    className=\"form-control\" >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" \r\n                                                      rows=\"12\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        {/* </LocalForm> */}\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, Label, Row, Col } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false            \r\n        }\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    };\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"New comment: \" + JSON.stringify(values));\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment );\r\n        this.toggleModal();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button onClick={this.toggleModal} outline className=\"py-1\">\r\n                    <span className=\"fa fa-pencil\"> Leave Comment</span>\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        New Comment\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                <Col>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                                    className=\"form-control\" defaultValue=\"5\">\r\n                                        <option value=\"5\" selected>5</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"1\">1</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                                  placeholder=\"Enter your name\" className=\"form-control\"\r\n                                                  validators={{\r\n                                                    required,\r\n                                                    minLength: minLength(3),\r\n                                                    maxLength: maxLength(15)\r\n                                                    }} \r\n                                    />\r\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required! ',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be less than 15 characters'\r\n                                            }} \r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"commentText\" md={12}>Comment</Label>\r\n                                <Col>\r\n                                    <Control.textarea model=\".comment\" id=\"commentText\" name=\"comment\" \r\n                                                      rows=\"6\" className=\"form-control\"\r\n                                                      placeholder=\"In my opinion...\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Add Comment\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CommentForm;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from './CommentForm';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n    function RenderDish({dish}) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <FadeTransform in transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    function RenderComments({comments, addComment, dishId}) {\r\n\r\n        const commentsList = comments.map((comment) => {\r\n\r\n            return (\r\n                // <div key={comment.id} className=\"\">\r\n                <div>\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                            <Fade in>\r\n                                <li key={comment.id}>\r\n                                    <p>{comment.comment}</p>\r\n                                    <p>--{comment.author}, {new Intl\r\n                                                            .DateTimeFormat(\r\n                                                                'en-US',\r\n                                                                {year: 'numeric', month: 'short', day: '2-digit'})\r\n                                                                .format(new Date(Date.parse(comment.date)))}\r\n                                    </p>\r\n                                </li>\r\n                            </Fade>\r\n                        </Stagger>\r\n                    </ul>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                {commentsList}\r\n                <CommentForm dishId={dishId} addComment={addComment} />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const DishDetail = (props) => {\r\n\r\n        const selectedDish = props.dish;\r\n        const comments = props.comments;\r\n        // const addCommentFunc = props.addComment;\r\n        const addCommentFunc = props.postComment;\r\n        // const selectedDishId = props.dish.id; --using this way will occur an error\r\n        const isLoading = props.isLoading;\r\n        const errorMessage = props.dishesErrMess;\r\n        const commentsErrMess = props.commentsErrMess;\r\n\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (errorMessage) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{errorMessage}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (selectedDish != null) {\r\n            return(\r\n                <main className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>{selectedDish.name}</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <h3>{selectedDish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                        <RenderDish dish={selectedDish} />\r\n                        <RenderComments comments={comments} \r\n                                        addComment={addCommentFunc}\r\n                                        dishId={props.dish.id} />\r\n                    </div>\r\n                </main>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n                <main className=\"container\"></main>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <footer className=\"main-footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/about\">About</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contact\">Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto pt-3\">\r\n                        <p>© Copyright 2021 Ristorante Con Fusion by zerg41</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","export const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'FAILED_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';","import * as ActionTypes from './ActionTypes';\r\n// import { DISHES } from '../shared/dishes'; --no longer needed since using Fetch\r\nimport { baseUrl } from '../shared/baseUrl'; // for communicate with a server\r\n\r\n/** ADD ACTIONS **/\r\n// export const addComment = (dishId, rating, author, comment) => ({\r\n//     type: ActionTypes.ADD_COMMENT,\r\n//     payload: {\r\n//         dishId: dishId,\r\n//         rating: rating,\r\n//         author: author,\r\n//         comment: comment\r\n//     }\r\n// });\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else { // in case of wrong URL like\r\n                let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        }, error => { // in case of impossibility to connect to to a server for example\r\n            let errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('Post comments', error.message);\r\n            alert('Your comment could not be posted\\n Error: ' + error.message);\r\n        });\r\n}\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => \r\n    (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else { // in case of wrong URL like\r\n                let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        }, error => { // in case of impossibility to connect to to a server for example\r\n            let errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log('New feedback has been posted:\\n', response);\r\n            alert('Thank you for your feedback!\\n' + JSON.stringify(response));\r\n        })\r\n        .catch(error => {\r\n            console.log('Post comments', error.message);\r\n            alert('Your comment could not be posted\\n Error: ' + error.message);\r\n        });\r\n}\r\n\r\n\r\n/** DISHES LOADING ACTIONS **/\r\n/* Thunk is returning a function */\r\n// export const fetchDishes = () => (dispatch) => { --V modified with fetch\r\n//     dispatch(dishesLoading(true));\r\n\r\n//     setTimeout(() => {dispatch(addDishes(DISHES))}, 2000);\r\n// };\r\n/* Using Fetch */\r\n// export const fetchDishes = () => (dispatch) => { \r\n//     dispatch(dishesLoading(true));\r\n\r\n//     return fetch(baseUrl + 'dishes')\r\n//             .then(response => response.json())\r\n//             .then(dishes => dispatch(addDishes(dishes)));\r\n// };\r\n/* Handle Error */\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                else { // in case of wrong URL like\r\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            }, error => { // in case of impossibility to connect to to a server for example\r\n                let errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n            .then(response => response.json())\r\n            .then(dishes => dispatch(addDishes(dishes)))\r\n            .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n\r\n/** COMMENTS LOADING ACTIONS **/\r\nexport const fetchComments = () => (dispatch) => {\r\n\r\n    return fetch(baseUrl + 'comments')\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                else {\r\n                    let error = new Error('Error ' + response.status + ' : ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            }, error => {\r\n                let errmess = new Error (error.message);\r\n                throw errmess;\r\n            })\r\n            .then(response => response.json())\r\n            .then(comments => dispatch(addComments(comments)))\r\n            .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n\r\n/** PROMOTIONS LOADING ACTIONS **/\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                else {\r\n                    let error = new Error('Error ' + response.status + ' : ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            }, error => {\r\n                let errmess = new Error (error.message);\r\n                throw errmess;\r\n            })\r\n            .then(response => response.json())\r\n            .then(promos => dispatch(addPromos(promos)))\r\n            .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\n/** LEADERS LOADING ACTIONS **/\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                else {\r\n                    let error = new Error('Error ' + response.status + ' : ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            }, error => {\r\n                let errmess = new Error (error.message);\r\n                throw errmess;\r\n            })\r\n            .then(response => response.json())\r\n            .then(leaders => dispatch(addLeaders(leaders)))\r\n            .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","import { Component } from 'react/cjs/react.production.min';\r\n// import { Navbar, NavbarBrand} from 'reactstrap'; --moved into HeaderComponent\r\nimport Header from './HeaderComponent';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Footer from './FooterComponent';\r\n// import { DISHES } from '../shared/dishes'; --no longer used since switching to Redux\r\n// import { COMMENTS } from '../shared/comments';\r\n// import { LEADERS } from '../shared/leaders';\r\n// import { PROMOTIONS } from '../shared/promotions';\r\nimport { Route, Redirect, Switch, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, postFeedback, fetchComments, fetchDishes, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // return { --preffered to use {} instead return\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    // }\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    // addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)), --since we use a post action\r\n    fetchDishes: () => {dispatch(fetchDishes())},\r\n    fetchComments: () => {dispatch(fetchComments())},\r\n    fetchPromos: () => {dispatch(fetchPromos())},\r\n    fetchLeaders: () => {dispatch(fetchLeaders())},\r\n    resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\r\n    postComment: (dishId, rating, author, comment) => \r\n                 dispatch(postComment(dishId, rating, author, comment)),\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => \r\n                 dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    // constructor(props) {\r\n    // super(props);\r\n\r\n    // /* Removed since switching to Redux */\r\n    // // this.state = {\r\n    // //         dishes: DISHES,\r\n    // //         comments: COMMENTS,\r\n    // //         leaders: LEADERS,\r\n    // //         promotions: PROMOTIONS\r\n    // //         // selectedDish: null --no longer used since React Route\r\n    // //     };\r\n    // // }\r\n\r\n    // /* Removed since React Route is used */\r\n    // // onDishSelect(dishId) {\r\n    // //     this.setState({ selectedDish: dishId });\r\n    // };\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n    \r\n    render() {\r\n\r\n        const HomePage = () => {\r\n            return(\r\n                // <Home dish={this.state.dishes.filter((dish) => dish.featured)[0]}\r\n                //       promotion={this.state.promotions.filter((promo) => promo.featured)[0]}\r\n                //       leader={this.state.leaders.filter((leader) => leader.featured)[0]} />\r\n                // <Home dish={this.props.dishes.filter((dish) => dish.featured)[0]} --since Redux Thunk the state for dishes no longer avaliable via props.dishes\r\n                <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                      dishesLoading={this.props.dishes.isLoading}\r\n                      dishesErrMess={this.props.dishes.errMess}\r\n                      promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                      promosLoading={this.props.promotions.isLoading}\r\n                      promosErrMess={this.props.promotions.errMess}\r\n                      leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                      leadersLoading={this.props.leaders.isLoading}\r\n                      leadersErrMess={this.props.leaders.errMess} />\r\n            );\r\n        };\r\n\r\n        const ContactPage = () => {\r\n            return(\r\n                <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n                         postFeedback={this.props.postFeedback} />\r\n            );\r\n        }\r\n\r\n        const AboutPage = () => {\r\n            return(\r\n                // <About leaders={this.state.leaders} />\r\n                <About leaders={this.props.leaders.leaders}\r\n                       isLoading={this.props.leaders.isLoading}\r\n                       errMess={this.props.leaders.errMess} />\r\n            );\r\n        };\r\n\r\n        const MenuPage = () => {\r\n            return(\r\n                // <Menu dishes={this.state.dishes} />\r\n                // <Menu dishes={this.props.dishes} />\r\n                <Menu dishes={this.props.dishes.dishes}\r\n                      isLoading={this.props.dishes.isLoading}\r\n                      errMess={this.props.dishes.errMess} />\r\n            );\r\n        };\r\n\r\n        const DishWithId = ({match}) => {\r\n            return(\r\n                // <DishDetail dish={this.state.dishes\r\n                //                  .filter((dish) => \r\n                //                  dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                //             comments={this.state.comments\r\n                //                  .filter((comment) =>\r\n                //                  comment.dishId === parseInt(match.params.dishId, 10))} \r\n                // />\r\n                <DishDetail dish={\r\n                                this.props.dishes.dishes\r\n                                .filter((dish) => \r\n                                dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                            isLoading={this.props.dishes.isLoading}\r\n                            dishesErrMess={this.props.dishes.errMess}\r\n                            comments={\r\n                                this.props.comments.comments\r\n                                .filter((comment) =>\r\n                                comment.dishId === parseInt(match.params.dishId, 10))}\r\n                            commentsErrMess={this.props.comments.errMess}\r\n                            // addComment={this.props.addComment}\r\n                            postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                {/* <Navbar dark color = \"primary\">\r\n                    <div className = \"container\">\r\n                        <NavbarBrand href=\"/\">Ristorante Con Fusion</NavbarBrand>\r\n                    </div>\r\n                </Navbar> */}\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        {/* <div className=\"container\"> */}\r\n                            {/* <Menu dishes={this.state.dishes}\r\n                                onClick={(dishId) => this.onDishSelect(dishId)} /> */}\r\n                            {/* <DishDetail selectedDish={this.state.dishes\r\n                                                    .filter((dish) => dish.id === this.state.selectedDish)[0]} /> */}\r\n\r\n                            {/* Configuring the Router */}\r\n                            <Switch>\r\n                                <Route path=\"/home\" component={ HomePage } />\r\n                                <Route exact path=\"/contact\" component={ ContactPage } />\r\n                                {/* <Route exact path=\"/menu\" component={() => <Menu dishes={this.state.dishes} /> } /> */}\r\n                                <Route exact path=\"/about\" component={ AboutPage } />\r\n                                <Route exact path=\"/menu\" component={ MenuPage } />\r\n                                <Route path='/menu/:dishId' component={DishWithId} />\r\n                                {/* Setting the default path */}\r\n                                <Redirect to=\"/home\" />\r\n                            </Switch>\r\n                        {/* </div> */}\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","// import { DISHES } from '../shared/dishes'; --moved to ActionCreators since Redux Thunk using\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n// export const Dishes = (state = DISHES, action) => { --no longer since DISHES moved to ActionCreators\r\nexport const Dishes = (state = {isLoading: true, errMess: null, dishes: []}, action) => {\r\n    switch(action.type) {\r\n\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        \r\n        default:\r\n            return state;\r\n    };\r\n};","// import { COMMENTS } from '../shared/comments'; --no longer needed since using Redux Store\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n// export const Comments = (state = COMMENTS, action) => {\r\n//     switch(action.type) {\r\nexport const Comments = (state = { errMes: null, comments: [] }, action) => {\r\n    switch(action.type) {\r\n\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload, comments: []};\r\n        \r\n        // case ActionTypes.ADD_COMMENT:\r\n        //     let comment = action.payload;\r\n        //     // comment.id = state.length; --since state is object with comments array\r\n        //     comment.id = state.comments.length;\r\n        //     comment.date = new Date().toISOString();\r\n        //     // console.log(\"Comment: \", comment); --handler no longer needed\r\n        //     // return state.concat(comment); --since state is object\r\n        //     return {...state, comments: state.comments.concat(comment)};\r\n\r\n        /* With POST */\r\n        case ActionTypes.ADD_COMMENT:\r\n            let comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        \r\n        default:\r\n            return state;\r\n    };\r\n};","// import { PROMOTIONS } from '../shared/promotions'; --no longer needed since using Redux Store\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n// export const Promotions = (state = PROMOTIONS, action) => {\r\n//     switch(action.type) {\r\n//         default:\r\n//             return state;\r\n//     };\r\n// };\r\n\r\nexport const Promotions = (state = {isLoading: true, errMess: null, promotions: []}, action) => {\r\n    switch(action.type) {\r\n\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []};\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        \r\n        default:\r\n            return state;\r\n    };\r\n};","// import { LEADERS } from '../shared/leaders';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true, errMess: null, leaders: [] }, action) => {\r\n    switch(action.type) {\r\n\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []};\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        \r\n        default:\r\n            return state;\r\n    };\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","// import logo from './logo.svg'; --no longer used\nimport { Component } from 'react/cjs/react.production.min';\nimport { BrowserRouter } from 'react-router-dom';\n// import DishDetail from './components/DishDetailComponent'; --moved into MainComponent\n// import { Navbar, NavbarBrand} from 'reactstrap'; --moved into MainComponent\n// import Menu from './components/MenuComponent'; --moved into MainComponent\nimport './App.css';\n// import { DISHES } from './shared/dishes'; --moved into MainComponent\nimport Main from './components/MainComponent';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  /* Constructor no longer used since the state has been moved to MainComponent */\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     dishes: DISHES\n  //   };\n  // }\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          {/* <div className=\"App\"> */}\n            {/* <Navbar dark color = \"primary\">\n              <div className = \"container\">\n                <NavbarBrand href=\"/\">Ristorante Con Fusion</NavbarBrand>\n              </div>\n            </Navbar> */}\n            {/* <Menu dishes={this.state.dishes} /> */}\n            <Main />\n          {/* </div> */}\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\n// import { Reducer, initialState } from './reducer'; --no longer used since Reduser separating and App initialized initialState\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { createForms } from 'react-redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\n// export const ConfigureStore = () => {\r\n//     const store = createStore(\r\n//         Reducer,\r\n//         initialState,\r\n//     );\r\n\r\n//     return store;\r\n// };\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n/* Importing of a Bootstrap and other libraries */\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}